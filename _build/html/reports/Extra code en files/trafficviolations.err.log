Traceback (most recent call last):
  File "/Users/nordin/opt/anaconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/nordin/opt/anaconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/nordin/opt/anaconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/nordin/opt/anaconda3/envs/jupyterbook/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/nordin/opt/anaconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/nordin/opt/anaconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/nordin/opt/anaconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Convert the 'Date Of Stop' in violations_df to a consistent date format
violations_df['Date Of Stop'] = pd.to_datetime(violations_df['Date Of Stop'], errors='coerce', infer_datetime_format=True)

# Convert the 'Start_Time' in accidents_df to a consistent date format
accidents_df['Start_Time'] = pd.to_datetime(accidents_df['Start_Time'], errors='coerce', infer_datetime_format=True)

# Define a function to map 'Yes'/'No' to 1/0
def map_yes_no(val):
    return 1 if val == 'Yes' else 0

# Apply the function to relevant columns in violations_df
violations_df['Accident'] = violations_df['Accident'].apply(map_yes_no)
violations_df['Belts'] = violations_df['Belts'].apply(map_yes_no)
violations_df['Personal Injury'] = violations_df['Personal Injury'].apply(map_yes_no)
violations_df['Fatal'] = violations_df['Fatal'].apply(map_yes_no)
violations_df['Alcohol'] = violations_df['Alcohol'].apply(map_yes_no)

# Aggregate traffic violations by date and state
violations_agg = violations_df.groupby(['Date Of Stop', 'State']).agg({
    'Accident': 'sum',
    'Belts': 'sum',
    'Personal Injury': 'sum',
    'Fatal': 'sum',
    'Alcohol': 'sum'
}).reset_index()

# Aggregate traffic accidents by date and state
accidents_agg = accidents_df.groupby([accidents_df['Start_Time'].dt.date, 'State']).size().reset_index(name='Accidents')

# Rename the date column in accidents_agg to match violations_agg
accidents_agg.rename(columns={'Start_Time': 'Date Of Stop'}, inplace=True)

# Convert 'Date Of Stop' in accidents_agg to datetime to match violations_agg
accidents_agg['Date Of Stop'] = pd.to_datetime(accidents_agg['Date Of Stop'])

# Merge the aggregated dataframes on date and state
merged_df = pd.merge(violations_agg, accidents_agg, on=['Date Of Stop', 'State'])

# Plotting the pair plot
sns.pairplot(merged_df[['Accidents', 'Accident', 'Belts', 'Personal Injury', 'Fatal', 'Alcohol']])
plt.suptitle('Pair Plot of Traffic Violations and Accidents', y=1.02)
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 2[0m
[1;32m      1[0m [38;5;66;03m# Convert the 'Date Of Stop' in violations_df to a consistent date format[39;00m
[0;32m----> 2[0m violations_df[[38;5;124m'[39m[38;5;124mDate Of Stop[39m[38;5;124m'[39m] [38;5;241m=[39m pd[38;5;241m.[39mto_datetime([43mviolations_df[49m[[38;5;124m'[39m[38;5;124mDate Of Stop[39m[38;5;124m'[39m], errors[38;5;241m=[39m[38;5;124m'[39m[38;5;124mcoerce[39m[38;5;124m'[39m, infer_datetime_format[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m      4[0m [38;5;66;03m# Convert the 'Start_Time' in accidents_df to a consistent date format[39;00m
[1;32m      5[0m accidents_df[[38;5;124m'[39m[38;5;124mStart_Time[39m[38;5;124m'[39m] [38;5;241m=[39m pd[38;5;241m.[39mto_datetime(accidents_df[[38;5;124m'[39m[38;5;124mStart_Time[39m[38;5;124m'[39m], errors[38;5;241m=[39m[38;5;124m'[39m[38;5;124mcoerce[39m[38;5;124m'[39m, infer_datetime_format[38;5;241m=[39m[38;5;28;01mTrue[39;00m)

[0;31mNameError[0m: name 'violations_df' is not defined

